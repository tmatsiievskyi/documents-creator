services:
  next-app:
    container_name: docs-app
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    env_file:
      - ../.env
    volumes:
      - ../src:/app/src
      - ../public:/app/public
      - ../prisma:/app/prisma
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - postgres
    networks:
      - docs_network

  postgres:
    container_name: docs-postgres
    image: postgres:17
    restart: always
    env_file:
      - ../.env
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U tarasPG -d docs-db']
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5433:5432
    volumes:
      - docs-postgres_data:/var/lib/postgresql/data
    networks:
      - docs_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8
    ports:
      - '5050:80'
    env_file:
      - ../.env
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost/pgadmin4']
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin/data
    networks:
      - docs_network

networks:
  docs_network:
    driver: bridge

volumes:
  docs-postgres_data:
  pgadmin_data:
